
//ПО АЛФАВИТУ
//A

// Array - создание массива  

// Math.abs - модуль числа  

// Math.asin - арксинус числа  

// Math.acos - арккосинус числа  

// Math.atan - арктангенс числа  

// at - символ строки по позиции  
 
// at - элемент массива по позиции  

// append - вставка в конец  

// appendChild - вставка в конец  

// classList.add - добавление классов  

// addEventListener - привязка событий  

// event.altKey - нажат ли Alt  

// apply - вызов функции с контекстом  

// Object.assign - копирование объектов  

// alert - окно для сообщения  

// arc - окружность, дуга  

//B

// break - остановка цикла  

// Boolean - преобразование к boolean  

// blur - снять фокус  

// bind - привязка контекста  

// beginPath - начало линии  

////C

// continue - переход на следующую итерацию  

// Math.ceil - округление в большую сторону  

// Math.cos - косинус числа  

// concat - объединение строк  

// charAt - символ строки  

// charCodeAt - символ по его коду  

// concat - слияние массивов вместе  

// clearInterval - сброс таймера  

// clearTimeout - сброс паузы  

// closest - родитель по селектору  

// contains - проверка на вложенность  

// children - все потомки элемента  

// childNodes - дочерние узлы  

// cells - массив ячеек таблицы  

// createElement - создание элемента  

// cloneNode - клонирование узла  

// createTextNode - создание текстового узла  

// classList - объект с классами  

// classList.contains - проверка классов  

// cssText - стиль одной строкой  

// clientLeft - левая граница  

// clientTop - верхняя граница  

// clientWidth - ширина содержимого  

// clientHeight - высота содержимого  

// event.currentTarget - элемент, на который назначили событие  

// event.ctrlKey - нажат ли Ctrl  

// event.clientX - координаты мыши  

// event.clientY - координаты мыши  

// event.code - значение кода кнопки  

// call - вызов функции с контекстом  

// confirm - окно для подтверждения  

// clearRect - стерка прямоугольника  

// closePath - завершение фигуры  

////D

// delete - удаление свойства объекта  

// Date - объект для работы с датой  

// data - значение узла  

// dataset - атрибуты data-  

// dispatchEvent - имитация события  

// direction - направление текста  

////E

// else - альтернатива условию  

// elseif - альтернатива условию  

// eval - выполнение строки кода  

// Math.exp - экспонента  

// Math.E - значение экспоненты  

// endsWith - проверка конца строки  

// exec - последовательный поиск регулярного выражения  

// every - проверка всех элементов в массиве  

// elementFromPoint - элемент на заданных координатах  

//F

// for - цикл для перебора элементов  

// for-of - цикл для массивов и итерируемых объектов  

// for-in - цикл для объектов (перебор свойств)  

// function - создание функции  

// false - логическое значение "ложь"  

// Math.floor - округление в меньшую сторону  

// String.fromCharCode - создание строки из кодов символов  

// forEach - перебор массива с выполнением функции для каждого элемента  

// filter - фильтрация массива по условию  

// fill - заполнение массива значением  

// find - поиск первого элемента в массиве, соответствующего условию  

// findIndex - поиск индекса первого элемента в массиве, соответствующего условию  

// findLast - поиск последнего элемента в массиве, соответствующего условию  

// findLastIndex - поиск индекса последнего элемента в массиве, соответствующего условию   

// flat - получение плоского массива из подмассивов   

// flatMap - получение плоского массива из подмассивов с применением функции   

// Array.from - создание массива из массивоподобного объекта   

// firstElementChild - первый потомок элемента   

// firstChild - первый дочерний узел   

// focus - установка фокуса на элемент

// fillRect - рисование заполненного прямоугольника   

// fill - заливка фигуры   

// fillStyle - цвет заливки   

// fillText - вывод текста на канвасе   

// font - шрифт текста   

//G

// getFullYear - получение года из объекта Date   

// getMonth - получение месяца из объекта Date   

// getDate - получение дня месяца из объекта Date   

// getHours - получение часов из объекта Date   

// getMinutes - получение минут из объекта Date   

// getSeconds - получение секунд из объекта Date   

// getMilliseconds - получение миллисекунд из объекта Date   

// getDay - получение дня недели из объекта Date   

// getTime - получение времени в миллисекундах из объекта Date   

// getElementById - получение элемента по id   

// getElementsByTagName - получение элементов по тегу   

// getElementsByClassName - получение элементов по классу   

// getAttribute - получение атрибутов элемента   

// getComputedStyle - получение стилей элемента из CSS   

// getBoundingClientRect - получение координат элемента и его размеров   

// getContext - получение контекста рисования на канвасе   

////H

// hasAttribute - проверка наличия атрибута у элемента  



//I

// if - условие  

// in - проверка наличия свойства  

// isFinite - проверка на конечное число  

// isNaN - проверка на NaN  

// Infinity - бесконечность  

// indexOf - поиск совпадений с начала строки  

// includes - поиск заданной строки в текущей строке  

// includes - проверка наличия в массиве  

// indexOf - поиск по массиву  

// Array.isArray - проверка является ли объект массивом  

// insertBefore - вставка перед указанным элементом  

// insertAdjacentElement - вставка элементов относительно указанного элемента  

// insertAdjacentHTML - вставка HTML кода в указанное место  

// insertAdjacentText - вставка текста в указанное место  

// innerHTML - HTML код элемента  

// event.isTrusted - проверка, является ли событие настоящим  

//J

// join - слияние массива в строку  

//K

// event.key - введенный символ  

// Object.keys - массив свойств объекта  

//L

// Math.log - натуральный логарифм  

// Math.LN2 - натуральный логарифм 2-х  

// Math.LN10 - натуральный логарифм 10-ти  

// Math.LOG2E - логарифм от e по основанию 2  

// Math.LOG10E - логарифм от e по основанию 10  

// length - длина строки  

// lastIndexOf - поиск совпадений с конца строки  

// length - длина массива  

// lastIndexOf - поиск по массиву с конца  

// lastElementChild - последний потомок элемента  

// lastChild - последний дочерний узел элемента  

// lineTo - рисование линии на канвасе  

// lineWidth - толщина линии на канвасе  

// lineCap - стиль конца линии на канвасе  

// lineJoin - стиль соединения линий на канвасе  

//M

// Math.max - максимальное число из набора значений  

// Math.min - минимальное число из набора значений  

// match - совпадения строки по регулярному выражению  

// matchAll - все совпадения строки по регулярному выражению  

// map - перебор массива с применением функции к каждому элементу  

// matches - проверка соответствия селектору для элемента  

// event.metaKey - проверка, нажат ли Cmd (на Mac)  

// moveTo - перемещение пера на канвасе  

// miterLimit - ограничение остроты угла линии  

//N

// Number - преобразование значения к числу  

// NaN - "не число" (Not-a-Number)  

// null - значение элемента null (отсутствие значения)  

// Date.now - получение текущей даты в миллисекундах  

// nextElementSibling - следующий элемент-сосед  

// nodeValue - значение узла  

//O

// Object - создание объекта  

// Array.of - получение массива из параметров  

// outerHTML - внешний HTML код элемента  

// offsetWidth - полная ширина элемента (включая границы)  

// offsetHeight - полная высота элемента (включая границы)  

// offsetParent - родительский элемент с позиционированием  

// offsetTop - смещение элемента от верхней границы родителя  

// offsetLeft - смещение элемента от левой границы родителя  

//P

// parseInt - преобразование строки в целое число  

// parseFloat - преобразование строки в дробное число  

// Math.pow - возведение числа в степень  

// Math.PI - число Пи (π)  

// padEnd - дополнение строки с конца до заданной длины  

// padStart - дополнение строки с начала до заданной длины  

// pop - удаление последнего элемента из массива  

// push - добавление элементов в конец массива  

// Date.parse - преобразование даты из строки в миллисекунды  

// previousElementSibling - предыдущий элемент-сосед  

// parentElement - родительский элемент узла  

// parentNode - родительский узел узла  

// prepend - вставка содержимого в начало элемента  

// event.preventDefault() - отмена действия по умолчанию для события  

// event.pageX - координаты мыши по оси X относительно документа  

// event.pageY - координаты мыши по оси Y относительно документа  

// prompt - окно для ввода данных пользователем  

//Q

// querySelector - получение первого элемента по селектору CSS
// querySelectorAll - получение всех элементов по селектору CSS   

//R

// Math.random() – генерация случайного числа от 0 до 1   

// Math.round() – округление числа до ближайшего целого   

// replace() – поиск и замена подстроки   

// repeat() – создание копий строки   

// replace() с регуляркой – поиск и замена по регулярному выражению   

// reverse() – переворот массива   

// reduce() – свертка массива к значению   

// reduceRight() – свертка массива к значению справа налево   

// rows() – массив строк таблицы   

// removeChild() – удаление дочернего узла   

// remove() – удаление элемента   

// removeAttribute() – удаление атрибутов у элемента   

// classList.remove() – удаление классов у элемента   

// removeEventListener() – удаление обработчика события   

// rect() – рисование прямоугольника на канвасе   

//S

// switch() – множественный выбор   

// String() – преобразование значения к строке   

// Math.sqrt() – вычисление квадратного корня числа   

// Math.sin() – синус числа   

// Math.SQRT1_2 – квадратный корень из 1/2   

// Math.SQRT2 – квадратный корень из 2   

// split() – разбиение строки на массив подстрок   

// substr() – вырезание подстроки из строки   

// substring() – вырезание подстроки из строки   

// slice() – вырезание части массива или строки   

// startsWith() – проверка начала строки   

// search() – поиск по регулярному выражению   

// split() (массив) – разбиение строки на массив подстрок   

// slice() (массив) – отрезание части массива   

// splice() (массив) – изменение содержимого массива (удаление или добавление элементов)   

// shift() (массив) – удаление первого элемента из массива   

// some() (массив) – проверка, удовлетворяет ли хотя бы один элемент массиву условию   

// sort() (массив) – сортировка массива   

//T

//typeof – тип переменной   

//true – значение элемента истинно   

//toFixed – округление числа до заданного количества знаков после запятой   

//toPrecision – округление числа до заданной точности   

//toExponential – представление числа в экспоненциальной нотации   

//toLowerCase – преобразование строки в нижний регистр   

//toUpperCase – преобразование строки в верхний регистр   

//trim – удаление пробелов по краям строки   

//trimEnd – удаление пробелов в конце строки   

//trimStart – удаление пробелов в начале строки   

//test – проверка соответствия строки регулярному выражению   

//T (таблицы)

//tHead – заголовок таблицы (thead)   

//tFoot – подвал таблицы (tfoot)   

//tBodies – тела таблицы (tbody)   

//U

//undefined – неопределенность   
 
//U (массив)

// unshift – добавление элементов в начало массива   

//V

 //  Object.values – массив значений объекта   

//W

 //  while – цикл   

